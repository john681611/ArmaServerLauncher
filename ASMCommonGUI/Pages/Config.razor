@page "/Config"
@inherits LayoutComponentBase
@using ASM.Lib
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="page darkMode">
    <div class="sidebar">
        <div class="top-row pl-4 navbar navbar-dark">
            <a class="navbar-brand" href=""></a>
            <button class="navbar-toggler" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>

        <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
            <ul class="nav flex-column">
                <li class="nav-item px-3">
                    <button class="btn btn-primary form-control" @onclick='() => ASM.Config.Save()'>Save</button>
                </li>
            </ul>
        </div>
        <div class="bottom-logo">
            <img src="_content/ASMCommonGUI/img/ASM_white.png" alt="Briefing Room Logo" />
            <span class="ver">@ASMCore.VERSION (@ASMCore.BUILD_VERSION) by <strong>John Harvey
                    (@@john681611)</strong></span>
        </div>
    </div>

    <div class="main">
        <div class="top-row px-4">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span>Launcher
            </NavLink>
            <NavLink class="nav-link" href="Config" Match="NavLinkMatch.All">
                <span class="oi oi-cog" aria-hidden="true"></span>Config
            </NavLink>
            <a href="@ASMCore.REPO_URL" target="_blank">GitHub</a>
        </div>

        <div class="content px-4">
            <div>
                <div class="generator-group flex-justify-spaced flex-margin-fix">
                    <div class="form-group flex-block">
                        <label>Steam Path</label>
                        <input class="form-control" @bind="ASM.Config.SteamPath" required />
                    </div>
                    <div class="form-group flex-block">
                        <label>Steam Login</label>
                        <input class="form-control" @bind="ASM.Config.SteamLogin" required />
                    </div>
                </div>


                <h2>Servers</h2>
                @foreach (var server in ASM.Config.Servers)
                {
                    <div class="form-group">
                        <h3>@server.Key</h3>
                        <div class="generator-group flex-justify-spaced flex-margin-fix">
                            <div class="form-group flex-block">
                                <label>Server Path</label>
                                <input class="form-control" @bind="server.Value.ServerPath" required />
                            </div>
                            <div class="form-group flex-block">
                                <label>Missions Path</label>
                                <input class="form-control" @bind="server.Value.MissionsPath" required />
                                <label>Optional Keys Path</label>
                                <input class="form-control" @bind="server.Value.OptKeysPath" required />
                            </div>
                        </div>
                        <div class="generator-group flex-justify-spaced flex-margin-fix">
                            <div class="form-group flex-block">
                                <label>Mods Path</label>
                                <input class="form-control" @bind="server.Value.ModsPath" required />
                            </div>
                            <div class="form-group flex-block">
                                <label>Config Path</label>
                                <input class="form-control" @bind="server.Value.ConfigPath" required />
                            </div>
                        </div>
                        <div class="generator-group flex-justify-spaced flex-margin-fix">
                            <div class="form-group flex-block">
                                <label>Network Config</label>
                                <input class="form-control" @bind="server.Value.NetworkConfig" required />
                            </div>
                            <div class="form-group flex-block">
                                <label>BattleEye Path</label>
                                <input class="form-control" @bind="server.Value.BattleEyePath" required />
                            </div>
                        </div>
                        <div class="generator-group flex-justify-spaced flex-margin-fix">
                            <div class="form-group flex-block">
                                <label>ExtraArgs</label>
                                <input class="form-control" @bind="server.Value.ExtraArgs" required />
                            </div>
                            <div class="form-group flex-block">
                                <label>Server Branch</label>
                                <input class="form-control" @bind="server.Value.ServerBranch" required />
                            </div>
                        </div>
                        <hr />
                    </div>
                }
                <div class="form-group flex-block">
                    <div class="input-group">
                        <input class="form-control" @bind="newServerName" placeholder="Server Name" required />
                        <div class="input-group-append">
                            <button class="btn btn-warning" @onclick='() => NewServer()'>Create Server</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    //NAV -----------------------------------------------------------------------------------
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }


    // ASM -----------------------------------------------------------------------------------

    private ASMCore ASM;
    private string newServerName;
    protected override void OnInitialized()
    {
        ASM = new ASMCore();
    }

    private void NewServer()
    {
        ASM.Config.Servers.Add(newServerName, new Server());
        ASM.Config.Save();
    }
}
